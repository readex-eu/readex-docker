#
# Ubuntu Dockerfile
#
# https://github.com/dockerfile/ubuntu
#

# Pull base image.
FROM ubuntu:18.04

# Install dependencies.
RUN \
  sed -i 's/# \(.*multiverse$\)/\1/g' /etc/apt/sources.list && \
  apt-get update && \
  apt-get -y upgrade && \
  apt-get install -y build-essential && \
  apt-get install -y software-properties-common && \
  apt-get install -y byobu curl git htop man unzip vim wget && \
  apt-get install -y gfortran && \
  apt-get install -y subversion && \
  apt-get install -y flex && apt-get install -y texinfo && apt-get install -y python && \
  apt-get install -y libpapi-dev papi-tools && \
  apt-get install -y bison && \
  apt-get install -y libopenmpi-dev libopenmpi2 && \
  rm -rf /var/lib/apt/lists/* && \
  mkdir /root/readex && \
  mkdir /root/readex/build_tools && \
  mkdir /root/readex/dependencies && \
  wget -P /root/readex/build_tools "http://tau.uoregon.edu/pdt.tgz" && \
  cd /root/readex/build_tools && tar -xvf pdt.tgz && rm -rf pdt.tgz && \
  cd pdtoolkit* && ./configure -GNU -prefix=/root/readex/dependencies/pdt && make && make install && \ 
  wget -P /root/readex/build_tools "http://www.readex.eu/wp-content/uploads/2018/04/scorep-dev-06.tar.gz" && \
  cd /root/readex/build_tools && tar -xzvf scorep-dev-06.tar.gz && rm -rf scorep-dev-06.tar.gz && \
  cd scorep-dev-06 && ./install-scorep-dev.06.sh --prefix=/root/readex/dependencies/scorep-dev && \
  wget -P /root/readex/build_tools/ "https://cmake.org/files/v3.11/cmake-3.11.4.tar.gz" && \
  cd /root/readex/build_tools && tar -xzvf cmake-3.11.4.tar.gz && rm -rf cmake-3.11.4.tar.gz && \
  cd cmake-3.11.4 && ./bootstrap --prefix=/root/readex/dependencies/cmake && make && make install && \
  apt-get update && \
  apt-get install -y libboost-all-dev && \
  apt-get install -y libace-6.4.5 libace-dev && \
  apt-get install -y libunwind-dev && \
  apt-get install -y libcereal-dev && \
  apt-get install -y lua5.1-dev

# Set environment variables for dependencies.
ENV HOME /root
ENV PAPI_INC /usr/include
ENV PAPI_LIB /usr/lib/x86_64-linux-gnu
ENV BISON_ROOT /usr/bin
ENV PDT_BIN /root/readex/dependencies/pdt/x86_64/bin
ENV SCOREP_DEV_ROOT /root/readex/dependencies/scorep-dev
ENV CMAKE_ROOT /root/readex/dependencies/cmake
ENV BOOST_INC /usr/include
ENV BOOST_LIB /usr/lib/x86_64-linux-gnu
ENV ACE_LIB /usr/lib
ENV LIBUNWIND_LIB /usr/lib/x86_64-linux-gnu
ENV CEREAL_INC /usr/include
ENV PATH=/root/readex/dependencies/cmake/bin:$PATH
ENV PATH=/root/readex/dependencies/scorep-dev/bin:$PATH
ENV LD_LIBRARY_PATH=/root/readex/dependencies/scorep-dev/lib:$LD_LIBRARY_PATH

# Install Score-P READEX
RUN cd /root/readex && \
    svn co https://silc.zih.tu-dresden.de/svn/silc-root/branches/TRY_READEX_online_access_call_tree_extensions ScoreP_READEX --username scorep --password foo42bar &&\
    cd ScoreP_READEX && \
    ./bootstrap && rm -rf build_gcc7.3.0 && mkdir build_gcc7.3.0 && cd build_gcc7.3.0 && \
    ../configure '--prefix=/root/readex/scorep/scorep_gcc7.3.0' \
                 '--enable-debug'\
                 '--enable-static'\
                 '--enable-shared' \
                 '--with-nocross-compiler-suite=gcc' \
                 '--enable-backend-test-runs' \
                 '--with-mpi=openmpi' \
                 '--disable-silent-rules' \
                 '--with-pdt=/root/readex/dependencies/pdt/x86_64/bin' \
                 '--with-libbfd=no' \
                 '--with-papi-header=/usr/include' \
                 '--with-papi-lib=/usr/lib/x86_64-linux-gnu' \
                 '--without-gui' \
                 'CFLAGS= -g -O3 -fno-omit-frame-pointer' \
                 'CXXFLAGS= -g -O3 -fno-omit-frame-pointer' && \
    make && \
    make install

# Set Score-P environment variables
ENV SCOREP_ROOT /root/readex/scorep/scorep_gcc7.3.0
ENV SCOREP_INC /root/readex/scorep/scorep_gcc7.3.0/include
ENV SCOREP_LIB /root/readex/scorep/scorep_gcc7.3.0/lib
ENV PATH=/root/readex/scorep/scorep_gcc7.3.0/bin:$PATH
ENV LD_LIBRARY_PATH=/root/readex/scorep/scorep_gcc7.3.0/lib:$LD_LIBRARY_PATH

# Install PTF READEX
RUN cd /root/readex && \
    git clone https://github.com/readex-eu/readex-ptf.git Periscope_READEX && \
    cd Periscope_READEX && \
    ./bootstrap && rm -rf build_gcc7.3.0 && mkdir build_gcc7.3.0 && cd build_gcc7.3.0 && \
    ../configure '--prefix=/root/readex/ptf/ptf_gcc7.3.0' \
                 '--enable-ace' \
                 '--with-ace-lib=/usr/lib' \
                 '--enable-boost' \
                 '--with-boost-include=/usr/include' \
                 '--with-boost-lib=/usr/lib/x86_64-linux-gnu' \ 
                 '--enable-cube' \
                 '--with-cube-include=/root/readex/scorep/scorep_gcc7.3.0/include' \
                 '--with-cube-lib=/root/readex/scorep/scorep_gcc7.3.0/lib' \
                 '--enable-scorep' \
                 '--with-scorep-include=/root/readex/scorep/scorep_gcc7.3.0/include' \
                 '--with-scorep-lib=/root/readex/scorep/scorep_gcc7.3.0/lib' \
                 '--enable-developer-mode' \
                 '--with-starter=slurm' \
                 '--enable-cereal' \
                 '--with-cereal-include=/usr/include' && \
    make && \
    make install

# Set PTF environment variables
ENV PERISCOPE_ROOT /root/readex/ptf/ptf_gcc7.3.0
ENV PERISCOPE_INC /root/readex/ptf/ptf_gcc7.3.0/include
ENV PERISCOPE_LIB /root/readex/ptf/ptf_gcc7.3.0/lib
ENV PATH=/root/readex/ptf/ptf_gcc7.3.0/bin:$PATH
ENV LD_LIBRARY_PATH=/root/readex/ptf/ptf_gcc7.3.0/lib:$LD_LIBRARY_PATH

# Install RRL
# curl --verbose --upload-file ./RRL.tar.gz https://transfer.sh/RRL.tar.gz
RUN wget -P /root/readex "https://transfer.sh/m2f5O/RRL.tar.gz" && \
    cd /root/readex && tar -xzvf RRL.tar.gz && rm -rf RRL.tar.gz && \
    cd RRL* && mkdir build_gcc7.3.0 && cd build_gcc7.3.0 && \
    cmake ../ -DCMAKE_INSTALL_PREFIX=/root/readex/rrl/rrl_gcc7.3.0 \
              -DDISABLE_CALIBRATION=ON \
              -DMIN_LOG_LEVEL="trace" && \
    make && \
    make install

# Set RRL envorinment variables
ENV RRL_ROOT /root/readex/rrl/rrl_gcc7.3.0
ENV RRL_BIN /root/readex/rrl/rrl_gcc7.3.0/bin
ENV RRL_INC /root/readex/rrl/rrl_gcc7.3.0/include
ENV RRL_LIB /root/readex/rrl/rrl_gcc7.3.0/lib
ENV PATH=/root/readex/rrl/rrl_gcc7.3.0/bin:$PATH
ENV LD_LIBRARY_PATH=/root/readex/rrl/rrl_gcc7.3.0/lib:$LD_LIBRARY_PATH

# Install Likwid
RUN cd /root/readex/dependencies && \
    git clone https://github.com/RRZE-HPC/likwid.git && \
    cd likwid && \
    make && \
    apt-get update && apt-get install sudo && \
    sudo make install

# Install PCPs
# Requires x86_adapt or msr-safe or Likwid; this installation uses Likwid
# curl --verbose --upload-file ./PCPs.tar.gz https://transfer.sh/PCPs.tar.gz
RUN wget -P /root/readex "https://transfer.sh/YPTNn/PCPs.tar.gz" && \
    cd /root/readex && tar -xzvf PCPs.tar.gz && rm -rf PCPs.tar.gz && \
    cd PCPs* && \
    sh build.sh "/root/readex/pcp/pcp_gcc7.3.0"

# Set PCPs environment variables
ENV PCP_ROOT /root/readex/pcp/pcp_gcc7.3.0
ENV PCP_BIN /root/readex/pcp/pcp_gcc7.3.0/bin
ENV PCP_INC /root/readex/pcp/pcp_gcc7.3.0/include
ENV PCP_LIB /root/readex/pcp/pcp_gcc7.3.0/lib
ENV PATH=/root/readex/pcp/pcp_gcc7.3.0/bin:$PATH
ENV LD_LIBRARY_PATH=/root/readex/pcp/pcp_gcc7.3.0/lib:$LD_LIBRARY_PATH

# Install ATP
# curl --verbose --upload-file ./ATP.tar.gz https://transfer.sh/ATP.tar.gz
RUN wget -P /root/readex "https://transfer.sh/mlAXS/ATP.tar.gz" && \
    cd /root/readex && tar -xzvf ATP.tar.gz && rm -rf ATP.tar.gz && \
    cd ATP* && mkdir build_gcc7.3.0 && cd build_gcc7.3.0 && \
    cmake ../ -DCMAKE_INSTALL_PREFIX=/root/readex/atp/atp_gcc7.3.0 \
              -DCMAKE_BUILD_TYPE=Debug && \
    make && \
    make install

# Set ATP envorinment variables
ENV ATP_ROOT /root/readex/atp/atp_gcc7.3.0
ENV ATP_BIN /root/readex/atp/atp_gcc7.3.0/bin
ENV ATP_INC /root/readex/atp/atp_gcc7.3.0/include
ENV ATP_LIB /root/readex/atp/atp_gcc7.3.0/lib
ENV PATH=/root/readex/atp/atp_gcc7.3.0/bin:$PATH
ENV LD_LIBRARY_PATH=/root/readex/atp/atp_gcc7.3.0/lib:$LD_LIBRARY_PATH

# Install Cluster_Prediction
# curl --verbose --upload-file ./Cluster_Prediction.tar.gz https://transfer.sh/Cluster_Prediction.tar.gz
RUN wget -P /root/readex "https://transfer.sh/ERv9Q/Cluster_Prediction.tar.gz" && \
    cd /root/readex && tar -xzvf Cluster_Prediction.tar.gz && rm -rf Cluster_Prediction.tar.gz && \
    cd Cluster_Prediction* && mkdir build_gcc7.3.0 && cd build_gcc7.3.0 && \
    cmake ../ -DCMAKE_INSTALL_PREFIX=/root/readex/cluster_prediction/cluster_prediction_gcc7.3.0 && \
    make && \
    make install

# Set Cluster_Prediction envorinment variables
ENV CLUSTER_PREDICTION_ROOT /root/readex/cluster_prediction/cluster_prediction_gcc7.3.0
ENV CLUSTER_PREDICTION_BIN /root/readex/cluster_prediction/cluster_prediction_gcc7.3.0/bin
ENV CLUSTER_PREDICTION_INC /root/readex/cluster_prediction/cluster_prediction_gcc7.3.0/include
ENV CLUSTER_PREDICTION_LIB /root/readex/cluster_prediction/cluster_prediction_gcc7.3.0/lib
ENV PATH=/root/readex/cluster_prediction/cluster_prediction_gcc7.3.0/bin:$PATH
ENV LD_LIBRARY_PATH=/root/readex/cluster_prediction/cluster_prediction_gcc7.3.0/lib:$LD_LIBRARY_PATH

# Install scorep_plugin_x86_energy
RUN cd /root/readex && \
    git clone https://github.com/score-p/scorep_plugin_x86_energy.git -b x86_energy_v_2 && \
    cd scorep_plugin_x86_energy && rm -rf build_gcc7.3.0 && mkdir build_gcc7.3.0 && cd build_gcc7.3.0 && \
    cmake ../ -DCMAKE_INSTALL_PREFIX=/root/readex/dependencies/scorep_plugin_x86_energy_gcc7.3.0 && \
    make && \
    make install

# Set x86_energy environment variable
ENV LD_LIBRARY_PATH=/root/readex/dependencies/scorep_plugin_x86_energy_gcc7.3.0/lib:$LD_LIBRARY_PATH

# Cleanup after installations
RUN cd /root/readex && \
    rm -rf ScoreP_READEX Periscope_READEX RRL PCPs ATP Cluster_Prediction build_tools scorep_plugin_x86_energy

# Define working directory.
WORKDIR /root

# Define default command.
CMD ["bash"]
